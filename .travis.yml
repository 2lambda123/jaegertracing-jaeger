sudo: required
language: go
go_import_path: github.com/jaegertracing/jaeger
dist: bionic
matrix:
  include:
  - go: "1.15.x"
    env:
    - TESTS=true
    - COVERAGE=true
  - go: "1.15.x"
    env:
    - PROTO_GEN_TEST=true
  - go: "1.15.x"
    env:
    - ALL_IN_ONE=true
  - go: "1.15.x"
    env:
    - CROSSDOCK=true
  - go: "1.15.x"
    env:
    - CROSSDOCK_OTEL=true
  - go: "1.15.x"
    env:
    - DOCKER=true
    - DEPLOY=true
  - go: "1.15.x"
    env:
    - ES_INTEGRATION_TEST=true
  - go: "1.15.x"
    env:
    - ES_OTEL_INTEGRATION_TEST=true
  - go: "1.15.x"
    env:
    - KAFKA_INTEGRATION_TEST=true
  - go: "1.15.x"
    env:
    - CASSANDRA_INTEGRATION_TEST=true
  - go: "1.15.x"
    env:
    - MEM_AND_BADGER_INTEGRATION_TEST=true
  - go: "1.15.x"
    env:
    - HOTROD=true

services:
- docker

env:
  global:
  - DOCKER_COMPOSE_VERSION=1.8.0
  - COMMIT=${TRAVIS_COMMIT::8}
  - PATH=$HOME/.yarn/bin:$PATH
  - secure: P6FJBlPXbu2RZeANeEOB6llm6Rh/1hG+OfzYFp0fQVQ107CkQh/RnhZX+VOWbLzpIn0NxAVnCosI63h4izwwZhg0FokvGuAbWb/C77dibNbT71TJKjO1Aytc6nqLswnl8rsVaVZazwS5o54k//0lSyAyl2PUHKlxbKubKLVcYx9bxwfLBO9ofGpDDjQwOe33ye+7QXAHR/ERS2uJ0r2SwC1gFGVKfpP5KdncvSfU1v2yBusYjAbtIe8IreIuRgn8dfnh+WVUlkaC/FDON3plTBenOgDImqiOlZrXwpsaYOx5smQGq8tvPjw7iE6opPIyFWI7dASXdgEp6mr3BznoAqicbEDTJdg7D3SlX5TMxQZjagzgoGOqM9E2ucZYE07ZXNwZG1xeDBqx3UNEYxx0i2LZiUqvcUZMc7p8gHfamus4WGvere1LGjBCZ/mZiHJwjsP5JogHQZ2f96MxTnxIRuvYq5s2SXP5p2iKpl9xhE5qRKwwBuZVT/95IMsjfZ7HsLJq8+1IdyEO3QH97ZZqMXtqrDBpEdP57etonVNUWX3h0gT0wGhy75fzSzj6ux7bHtLgvy44Y7YsI197kzmvJgOHMU9kVgp4vIxAgdMrRMCanhSE0fPbpSKtWRNdMHI3NHYonfy1uDbN/hXKZblig5zwnkgq6QoQutdiN/jCZBw=
  - secure: XLLLSBVTxEWpFs0WT7Osbse+soE4liwKsasPLJjyLUoSOqskSxRgE5rXhB+bpIx1P53CEBZmcrwqAtHZQEX8v/dvJqqaEl5HP1KVMkLV7KL0h83HhLXBjwzGrWL7ba7fUybrg9zhyrRRQHMZu38zbH0/o+pixS54DfBgpiYjzRr9+4HH0maCn/WMs48d6jbH57mpKzDUEpTkgxiABZM0dItUVTi3WfYp68gFES6fg6eLK/rKv//139A82OBdU40s6HU+kbm7EmOPzGxcwzw9xdOB2EsSFmtfekmHawbYppgrYsP3Pzm5RW2QEp5Hp4wnH0g3/A3GzUg0DgdZFiBMGNAX3Rc9UgQy7+oUnVramqc7qMUmHl7x5W4LAS/OVJKvyoiyf0kGHy1j/E0uT2pI6JEJNB0dsg3P+JjGkfdjJ7/UIVfa64ph1Y2zEqls02ReVUXgYgifEdBQj7C1Jc6DGGD7PxnBU3O6E1J2Gda9J8HeN8RjH6gYH64rCGA0HQveKYm3zvIj4fXqUcEd6jMhoXPRPVqHJIz5ACv2qCnc3OJGutjrWDBIEEfhaD2esSpckLJLyGm4+iTXRJTCJ/wx00h7oBloMnGuin2CpIkciNJBiOlx077XZr1HAIihieFPy9+YIEQ9A82RtLmXIUSUE7CJGkVe6hiiQoxdS/CNqKA=
  - secure: diLZiQn7Ksa9emBF0X6hcFtDblnAuy3CklGuCmHkGWhNPXSBy1SAp+IT40PHV/yRPOl993CK4DHg+6mtMUrs6gH1m5siuyFcFwAfHiJbKpMKS+TH0FjoKcEb3TxagHfnpoQUtDxMirjMYlnjltLcRp2E6crJ70Ujf32hAZp+RH5h0ujcir9GG2nvnr6urKOGUNQLmwf7Bd0ZzTVv5UOuSGWonVWON7rRfJyni6Dz42T8zaM7Hu8jPA6ILi83beTqv1gENQtUNR2GzU2LHitSQLj2KN1lr6Ssy12YtmZ5Uqxk7ixj7VQh9Fza5J00hmriLAA5YGy8j8oNB+yDZXrJAHZP2jdVuOR9pi0sW5cU+OX6VCcuiWhC3mAxHAK0AhcDK6EbKFwdD8b8oU1FOvHk1epNa+J30UpX0vzQ3yL6whiIebGc9QnBy3SKZi4NHYyuNjAuvbTTV8qz6gmrfiblPlKUc8xYmPQryfz6U3G3g2W4b366bYnf0oPBCOvB28PU9tFoFL0eUpRsQiFElk2yoDEmLR5mb+uh7t0PFtsG/KLHe4UfBzmET7PsRARCsFVqk/2UiyizzcUWhNe3cAg4xKWpUXtOzP8bQjyxKxZxgULorT4f7Xb9nv++LQ/4cMgvIjfBjsqnHSEh8hcK21HZbGMMjvDE2Gp1B2G5SEaaKoA=
  - secure: E74t2hnLdng71CeYb5QsEVGP3gdNWb4mCBWabqIp5ixHnWHR2SiaPaZlZTvvoYEzHZfE0a+0ptsx6QXOYY0gLrVhmtwcu+LO+cZH9yHqs4+YdpIeQmBNoIBkDNYQgFAHF6jxIZSDcHjYIw7nTEZcQo4Ggs04RIK5r5FZe7UOZ1pa/IPxhbMt7Mf/aClFwL/HVM3szjfwhTrp1SiKHqJQ8YkyqDOIXP9jIl1pHuf5h2KOeNhATFmG5ijkImVAGYkm/GO738GpZv6I1tl6EuoiNKIMCpLkB8by1YmOzF6r6qBc7ru5YwAEI8WXRe2AV1rHPJgmjH7N1oDdl5D0sxloEXenoI7jWTr29FKuQz3IJXLiVdqC36BNApy7YFYxqG2UqmqmY+ZhgVDt0vxIzKqYlTCCsKQn63OCmZSxWLAX8GLeM8cVgZqY3bmijI3HYJWAUQq0RLfSychYMiTO+LGwYRY/QySfN0d75h2o0ih02pWR8Z3udk2HTekVMs0luSoBzyyYk60Fp7oEwQcLuyg1+1i4ZOEcdl5+nPQkdpHqhjD6byg5r7T5S/cYr4RMssqmpDrXS28S55uxUk0nKbZHlqGPWe5Nji2siNaDZPF+SZsTsK0cN7aiNhQRPu08ZcD5IY+azofGNhaYV2nPpoMnHqDg9yccrmhq6uJr17EwOwU=
install:
- docker rmi $(docker images -q) || true
- travis_retry make install-ci
- if [ "$ALL_IN_ONE" == true ]; then bash ./scripts/travis/install-ui-deps.sh ; fi
- if [ "$DOCKER" == true ]; then bash ./scripts/travis/install-ui-deps.sh ; fi
- if [ "$CROSSDOCK" == true ]; then bash ./scripts/travis/install-crossdock-deps.sh; fi

script:
- export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
- if [ "$TESTS" == true ]; then make test-ci ; else echo 'skipping tests'; fi
- if [ "$PROTO_GEN_TEST" == true ]; then make proto && git diff --name-status --exit-code; else echo 'skipping protoc validation'; fi
- if [ "$ALL_IN_ONE" == true ]; then bash ./scripts/travis/build-all-in-one-image.sh; else echo 'skipping all_in_one'; fi
- if [ "$CROSSDOCK" == true ]; then travis_retry bash ./scripts/travis/build-crossdock.sh; else echo 'skipping crossdock'; fi
- if [ "$CROSSDOCK_OTEL" == true ]; then travis_retry make build-crossdock crossdock-otel; else echo 'skipping OpenTelemetry crossdock'; fi
- if [ "$DOCKER" == true ]; then bash ./scripts/travis/build-docker-images.sh ; else echo 'skipping build-docker-images'; fi
- if [ "$DOCKER" == true ]; then bash ./scripts/travis/upload-all-docker-images.sh; else echo 'skipping docker upload'; fi
- if [ "$DEPLOY" == true ]; then make build-all-platforms ; else echo 'skipping build-all-platforms'; fi
- if [ "$ES_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/es-integration-test.sh; else echo 'skipping elastic search integration test'; fi
- if [ "$ES_OTEL_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/es-integration-test.sh; else echo 'skipping elastic search integration test'; fi
- if [ "$KAFKA_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/kafka-integration-test.sh; else echo 'skipping kafka integration test'; fi
- if [ "$CASSANDRA_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/cassandra-integration-test.sh ; else echo 'skipping cassandra integration test'; fi
- if [ "$MEM_AND_BADGER_INTEGRATION_TEST" == true ]; then travis_retry make mem-and-badger-storage-integration-test; else echo 'skipping mem and badger integration test'; fi
- if [ "$HOTROD" == true ]; then bash ./scripts/travis/hotrod-integration-test.sh; else echo 'skipping hotrod example'; fi
after_success:
- if [ "$COVERAGE" == true ]; then mv cover.out coverage.txt ; else echo 'skipping coverage'; fi
- if [ "$COVERAGE" == true ]; then bash <(curl -s https://codecov.io/bash) ; else echo 'skipping coverage'; fi
after_failure:
- if [ "$CROSSDOCK" == true || "$CROSSDOCK_OTEL" == true ]; then make crossdock-logs; else echo 'skipping crossdock'; fi
before_deploy:
- if [ "$DEPLOY" == true ]; then bash ./scripts/travis/package-deploy.sh ; else echo 'skipping deploying binaries'; fi
deploy:
  provider: releases
  api_key:
    secure: P3+TKR3y4S51jjMp4l9kRm5cjr7Mg2m5rlPcRCjjVp/mVgkkhsMx9K8Rj/Cv/pJe33jbkwRy020gq4lYpa+Yh+Q3A11z3EKXyqizwqsvJtufoIXxXCxt0kLXn8aIh7aLrqVT2wxtkv3RvkRODmLZqvWG4kAfNBuzpcFhstw1RU3WNyahStOgwVJ9tYRdpsJ0ztMmGgQFpT6bppselzEXY7hS7L+l/bLcH9aGON4YECupAE6EilWwGxPs4oLJPmGsWQNogb3SE/oeFDqEJzciWcObk264fwIBf28HtmszQSmVbOuOfg/OhcVg13OvPXmRGk9hvU2kyzehMLZ0zeEE1mKsGmoObziNVuYPPY3KbRlsYARX41M1QKAI1YFe9NIXC5yhemOy4Xv0g82jyZmYWrf6QydLBZWkztUL7mJ6DkrG+5EohVVC2oprBS32/w736f8AWwHJSfL/JrFMTDctdYzUaf0yZMdfKdLdRyP/Q5KTfhUJl8zHAOih8f23WJVCSlwyJBYDzkq5OmNGf7BxJYkJExUOUwXcJE9jYgXq0y291N9BtG2cUVKhZZsSSrvR32bMtYtTT2a3ZlTHJpzVI+lZStYDpE/wyJRqnjqf9p8bDxc1l2mQGSxgyY8Yv8u9c+RCCj4tRwZTrJ4LIBWecDPS5hobV3Q1Dg3sW2UGRXA=
  file_glob: true
  file:
  - deploy/*.tar.gz
  skip_cleanup: true
  on:
    tags: true
    repo: jaegertracing/jaeger
    branch: master
