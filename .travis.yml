sudo: required
language: go
go_import_path: github.com/jaegertracing/jaeger
dist: bionic
matrix:
  include:
  - go: 1.15.x
    env:
    - TESTS=true
    - COVERAGE=true
  - go: 1.15.x
    env:
    - PROTO_GEN_TEST=true
  - go: 1.15.x
    env:
    - ALL_IN_ONE=true
  - go: 1.15.x
    env:
    - CROSSDOCK=true
  - go: 1.15.x
    env:
    - CROSSDOCK_OTEL=true
  - go: 1.15.x
    env:
    - DOCKER=true
    - DEPLOY=true
  - go: 1.15.x
    env:
    - ES_INTEGRATION_TEST=true
  - go: 1.15.x
    env:
    - ES_OTEL_INTEGRATION_TEST=true
  - go: 1.15.x
    env:
    - KAFKA_INTEGRATION_TEST=true
  - go: 1.15.x
    env:
    - CASSANDRA_INTEGRATION_TEST=true
  - go: 1.15.x
    env:
    - MEM_AND_BADGER_INTEGRATION_TEST=true
  - go: 1.15.x
    env:
    - HOTROD=true
services:
- docker
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.8.0
  - COMMIT=${TRAVIS_COMMIT::8}
  - PATH=$HOME/.yarn/bin:$PATH
  - secure: X0xg6oSdb5UKcIWaGlHAu1AX10YdgxkKfnPPas9huynAfAYw/5nPuGdtmYRT1xurDdU13+QOrQkyOUg3QxGIU36u060ZGOJk8LlLIi1md9RCY44PNOOo5HuwYg5ARBy/KUS2BPUJhCM+G/mm9TvSHoDMt0lRxHHP0yydwEWFwnoR9SzdyCibOYjKJ7FtMY7X1Y+ahJXKsQxIaG5Ve5240B8rzon+gK34pK4XLY4yEQvDGPGPPpVb/urH8p/OUGbFKVbkEdRnA+um4aL/XRhMQud82Z8mIObjUD5Tai6YaHhkotIujFkTq0Bx7a2/NXTZ3CE0WG2cQk2aag/wqyR9ac48udZpFd97X6W6N7bYHRsMSPGkfVfDCELzTIZRh/L4OQwplsl4enj8Moe+ZNNV5gM0CnKJjQEJhoWgdWNSwqUOuH/vja0S5EGx9VcBvBoGhDOIAb5XdKMChdwMbF+iudr3BfzLzVjV2g3t+0OA6hkK7dYRvNMmKTQzQVjD0A5mpuPcRQ0g8tSeY4jWWhUezdkbUzz6ZTVJpyhNX2k6yZUlRKQid/NR1KkLe7UHPqp/em+/vyZIsotl7f3RRMUlQOjZ31bvHJAflPQTA8bWTRtGI7g/364+W8y0GZGjwv7QK7cIxFHO7+oL2ivvj8SFrmt6iwKvvYzcp9HYDotrY1s=
  - secure: PupyDuD8vOlDSwHfol9V2u8craRQQbZe0cl0oAbMokRrKQ5C83tJhc6KEu3d83v82KE2zzmFQL9pv1go2B5xqvRVf2heOzwLGOdx1NyTlx90hkUg058TLYYOkxjukN5cL94/PI2wcXbtUSUsGzuGkS2Xj3rP4TER+HRVnGBTXIS0XBYgaOUW4DiR+Osr8Gn6++MA99vf5wtKAdopa33Fu41eUOGya2iz6YG4dL/EoDeyQ0Ly9Jg9yj+oVTvDKkXEPDu6mXSYtqkRNRt6u71sW5Aicks28COntuQWLms5AVlTdTPD0fcJSiRXu4+T7W4/RlgNojSqyYpmPfolRgnZ9L2NAULnOOabk9PMikpkWcb5BHKFuJbEpgvC463KIDObUsy8gHPYwAjDHjtfhQslJkTNI6KZ3lwxl8HJLMulFAeWDj177ENG4nnQNHb9A6KlaPfif8/pWG3G+XEEnq1waT1qqEPlEHr4S38o0ZLQnegW2EvTHic763/AS+iFRPHx01AIN6cqSLebCLFvn5PojWZZVhFGuQ5k7RIeRc2OoFaJRDALdks6QQskyRJz067QvROZVVZR06Jq4zES1kIa43dSmfCFKAZb+ARaRGfh7Z1Gp6ujQUHTd8HNTDdvKiN5hRMsQOuP8VlGQcn7ouV/jNReCRbmchGliA4DPQ7xrqU=
  - secure: Xjw0MM8+yP2IMbcpXrkP1Qx3cjs9LZ3bdPxD8BuU7F6UmZIEXqkoJG4BOyfLBMabpji6A77dGPD/c6kS98/4706FefzyEC7VQNbmy84WGh2HXKlKEnHO7Q4dbOmsdo1fif2hvcpZcmp6JlFlWXqSuJPa+m7VOF7qgKYygDa7X4zI0gOSECOEKLISRaA6QlEp1f88oulfxlGtqq6rqWdq6FYZb5icrOHn6TpTIMI14aXc/BZI0dDzSDJlK3sA6Mez3uW7jMupoK4Udmwey6hVlMm2PZd9EBmWlwFO8iQ73FgiZSgQ06sLmbQ6hmrYznnORJI8ex7IRtaSp+h8gWP6zkQLXAYzlzjYVMjD+RiJFhEd5MiKVH5n29vJBPpi/u3MhmqczU2kqvMC9D7ui9YkOegJItYsYCu/zK8JvmAwpJCozhKVKqOZcaJFBbHBok8yG1c6dDypaBWosAP18mrlLUXtA4pmHf+3UdJ5DgCy7HF6+eSlobPi/h9E4xTBgxfmSU1N6j6h6+pc+ohHySqrkSyPt/DZBd7e2nrHq/yyzAyohbayiGCVSsw3z+VjqobmM4x7f/1EjV+PHNi9AL7L1O075nZFROX1cGtoB9Lh04DE+XcZ8QC1rT50tOTEV83LbkX1VXu+vrDdzp02i9qkP4OenXbkqeXQfYKITtP3niE=
  - secure: UsSK2UCnc0f3osyxD9aKKsDpTQiT81JYa4hLcqsa5J715MSRTtM8FPoQJus/F/gOQpnnXoOVO0pReJgtHurgqHh/2EBHd8bdK8HF7drdMCdyOWF4fVOflLRsNC6782r4zfG94e8Hu/O97nzlJMDh2210B4Qojq6KOEo4Hnh26pOvG4dUKtAF/nFHsSkEtWDnU/WUpFzmyW1hfPxIriF520zGjhtZsfnZn1pX1u/vsfFsapT4Dmlcr8toRmsmX6OqCyu9zRdydDgbTJy2zrj+pn2Ud6fZ9VWf1c/dveLLoVSDCii7EjJKTK/FwvPTDLGQzQJ7sJlMOF3Xn2sJ0RWwEtWL/40Bt7eT8TJbiCAHwQzkvMTLwkMbEMN63RXl6afeytc1h+oxOeENqxS7vX32Tx2QVuGJm1/h55EXXUyz6LJR75002wSjehh033JJ7TlHhya2A7HJQDxu+hxgmUFIav7uaaowY9kDXi7DbLjk0uaZ3LEqCAfFym0ologcoMUvic6/W0XyQC5LK7ksaQmij/rLzS/WFN0MRO7ToFsoAtRAQ0g0MX9xVJACZbcLGpNzMnMs+XOJtqMm+vmxCatH81vbctglMMitABIoYrEWm3OMeCnSxkkSj2L2pEw3n2zrlWyQ6rXdGefGmy9rqF+B87nHpQ91HRDxKJAchQPY6Ho=
install:
- docker rmi $(docker images -q) || true
- travis_retry make install-ci
- if [ "$ALL_IN_ONE" == true ]; then bash ./scripts/travis/install-ui-deps.sh ; fi
- if [ "$DOCKER" == true ]; then bash ./scripts/travis/install-ui-deps.sh ; fi
- if [ "$CROSSDOCK" == true ]; then bash ./scripts/travis/install-crossdock-deps.sh
  ; fi
script:
- export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH;
  else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
- if [ "$TESTS" == true ]; then make test-ci ; else echo 'skipping tests'; fi
- if [ "$PROTO_GEN_TEST" == true ]; then make proto && git diff --name-status --exit-code
  ; else echo 'skipping protoc validation'; fi
- if [ "$ALL_IN_ONE" == true ]; then bash ./scripts/travis/build-all-in-one-image.sh
  ; else echo 'skipping all_in_one'; fi
- if [ "$CROSSDOCK" == true ]; then travis_retry bash ./scripts/travis/build-crossdock.sh
  ; else echo 'skipping crossdock'; fi
- if [ "$CROSSDOCK_OTEL" == true ]; then travis_retry make build-crossdock crossdock-otel
  ; else echo 'skipping OpenTelemetry crossdock'; fi
- if [ "$DOCKER" == true ]; then bash ./scripts/travis/build-docker-images.sh ; else
  echo 'skipping build-docker-images'; fi
- if [ "$DOCKER" == true ]; then bash ./scripts/travis/upload-all-docker-images.sh
  ; else echo 'skipping docker upload'; fi
- if [ "$DEPLOY" == true ]; then make build-all-platforms ; else echo 'skipping build-all-platforms';
  fi
- if [ "$ES_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/es-integration-test.sh
  ; else echo 'skipping elastic search integration test'; fi
- if [ "$ES_OTEL_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/es-integration-test.sh
  ; else echo 'skipping elastic search integration test'; fi
- if [ "$KAFKA_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/kafka-integration-test.sh
  ; else echo 'skipping kafka integration test'; fi
- if [ "$CASSANDRA_INTEGRATION_TEST" == true ]; then travis_retry bash ./scripts/travis/cassandra-integration-test.sh
  ; else echo 'skipping cassandra integration test'; fi
- if [ "$MEM_AND_BADGER_INTEGRATION_TEST" == true ]; then travis_retry make mem-and-badger-storage-integration-test
  ; else echo 'skipping mem and badger integration test'; fi
- if [ "$HOTROD" == true ]; then bash ./scripts/travis/hotrod-integration-test.sh
  ; else echo 'skipping hotrod example'; fi
after_success:
- if [ "$COVERAGE" == true ]; then mv cover.out coverage.txt ; else echo 'skipping
  coverage'; fi
- if [ "$COVERAGE" == true ]; then bash <(curl -s https://codecov.io/bash) ; else
  echo 'skipping coverage'; fi
after_failure:
- if [ "$CROSSDOCK" == true || "$CROSSDOCK_OTEL" == true ]; then make crossdock-logs
  ; else echo 'skipping crossdock'; fi
before_deploy:
- if [ "$DEPLOY" == true ]; then bash ./scripts/travis/package-deploy.sh ; else echo
  'skipping deploying binaries'; fi
deploy:
  provider: releases
  api_key:
    secure: P3+TKR3y4S51jjMp4l9kRm5cjr7Mg2m5rlPcRCjjVp/mVgkkhsMx9K8Rj/Cv/pJe33jbkwRy020gq4lYpa+Yh+Q3A11z3EKXyqizwqsvJtufoIXxXCxt0kLXn8aIh7aLrqVT2wxtkv3RvkRODmLZqvWG4kAfNBuzpcFhstw1RU3WNyahStOgwVJ9tYRdpsJ0ztMmGgQFpT6bppselzEXY7hS7L+l/bLcH9aGON4YECupAE6EilWwGxPs4oLJPmGsWQNogb3SE/oeFDqEJzciWcObk264fwIBf28HtmszQSmVbOuOfg/OhcVg13OvPXmRGk9hvU2kyzehMLZ0zeEE1mKsGmoObziNVuYPPY3KbRlsYARX41M1QKAI1YFe9NIXC5yhemOy4Xv0g82jyZmYWrf6QydLBZWkztUL7mJ6DkrG+5EohVVC2oprBS32/w736f8AWwHJSfL/JrFMTDctdYzUaf0yZMdfKdLdRyP/Q5KTfhUJl8zHAOih8f23WJVCSlwyJBYDzkq5OmNGf7BxJYkJExUOUwXcJE9jYgXq0y291N9BtG2cUVKhZZsSSrvR32bMtYtTT2a3ZlTHJpzVI+lZStYDpE/wyJRqnjqf9p8bDxc1l2mQGSxgyY8Yv8u9c+RCCj4tRwZTrJ4LIBWecDPS5hobV3Q1Dg3sW2UGRXA=
  file_glob: true
  file:
  - deploy/*.tar.gz
  skip_cleanup: true
  on:
    tags: true
    repo: jaegertracing/jaeger
    branch: master
