name: Build all-in-one

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ (github.event.pull_request && github.event.pull_request.number) || github.ref || github.run_id }}
  cancel-in-progress: true

# See https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions
permissions:
  contents: read

jobs:
  all-in-one:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode:
        - name: v1
          binary: all-in-one
          skip_sampling: false
        - name: v2
          binary: jaeger
          skip_sampling: true

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
      with:
        go-version: 1.21.x

    - name: Setup Node.js version
      uses: ./.github/actions/setup-node.js

    - name: Export BRANCH variable
      uses: ./.github/actions/setup-branch

    - name: Install tools
      run: make install-ci

    - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3

    - name: Define PR_ONLY var if running on a Pull Request
      run: |
        case ${GITHUB_EVENT_NAME} in
          pull_request)
            echo "PR_ONLY=pr-only" >> ${GITHUB_ENV}
            ;;
          *)
            echo "PR_ONLY=" >> ${GITHUB_ENV}
            ;;
        esac

    - name: Build, test, and publish all-in-one image
      run: |
        BINARY=${{ matrix.mode.binary }} \
          SKIP_SAMPLING=${{ matrix.mode.skip_sampling }} \
          bash scripts/build-all-in-one-image.sh ${{ env.PR_ONLY }}
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}

    - name: Setup CODECOV_TOKEN
      uses: ./.github/actions/setup-codecov

    - name: Upload coverage to codecov
      uses: codecov/codecov-action@894ff025c7b54547a9a2a1e9f228beae737ad3c2
      with:
        files: cover.out
        verbose: true
        flags: all-in-one-${{ matrix.mode.name }}
        fail_ci_if_error: true
        token: ${{ env.CODECOV_TOKEN }}
