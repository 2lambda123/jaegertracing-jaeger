name: Publish release

on:
  release:
    types:
      - published
  # allow running release workflow manually
  workflow_dispatch:

# See https://github.com/jaegertracing/jaeger/issues/4017
# and https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions
permissions:
  deployments: write
  contents: write

jobs:
  publish-release:
    if: github.repository == 'jaegertracing/jaeger'
    runs-on: ubuntu-latest

    steps:
    - name: How much disk space do we have at the start?
      run: df -h /

    - name: Harden Runner
      uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
      with:
        go-version: 1.21.x

    - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d
      with:
        node-version: '16'

    - name: Export BRANCH variable
      uses: ./.github/actions/setup-branch

    - name: Fail early if the latest tag is not in semver format
      id: validate-semver
      run: |
        make echo-version
        make echo-version | grep -E '^v[0-9]+.[0-9]+.[0-9]+$'

    - name: Install tools
      run: make install-ci

    - name: Configure GPG Key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}

    - name: Build binaries
      id: build-binaries
      run: make build-all-platforms
      if: steps.validate-semver.outcome == 'success'

    - name: Package binaries
      id: package-binaries
      run: bash scripts/package-deploy.sh
      if: steps.build-binaries.outcome == 'success'

    - name: Upload binaries
      uses: svenstaro/upload-release-action@1beeb572c19a9242f4361f4cee78f8e0d9aec5df
      with:
        file: '{deploy/*.tar.gz,deploy/*.zip,deploy/*.sha256sum.txt,deploy/*.asc}'
        file_glob: true
        overwrite: true
        tag: ${{ github.ref }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ steps.package-binaries.outcome == 'success' && env.BRANCH != 'main' }}

    - name: Clean up deployed archives
      run: |
        bash rm -rf deploy
        df -h /

    - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3

    - name: Build and upload all docker images
      run: bash scripts/build-upload-docker-images.sh
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
      if: steps.package-binaries.outcome == 'success'

    - name: Build, test, and publish all-in-one image
      run: bash scripts/build-all-in-one-image.sh
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
      if: steps.package-binaries.outcome == 'success'

    - name: Build, test, and publish hotrod image
      run: bash scripts/hotrod-integration-test.sh
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
      if: steps.package-binaries.outcome == 'success'

    - name: SBOM Generation
      uses: anchore/sbom-action@78fc58e266e87a38d4194b2137a3d4e9bcaf7ca1
      with:
        artifact-name: jaeger-SBOM.spdx.json
      if: steps.package-binaries.outcome == 'success'
